export interface VideoData {
    duration: string;
    title: string;
    author: string;
    rating: number;
    description: string;
    tags: string[];
    comments: Comment[];
}
export interface Comment {
    isAnonymous: boolean;
    content: string;
    date: Date;
    avatarURL?: string;
    username: string;
    ip?: string;
    likes: number;
    sendFromMobile: boolean;
    parentOf?: Comment;
}
export interface Date {
    day: number;
    month: number;
    year: number;
    hour: number;
    minute: number;
    second: number;
}
export declare class CdaVideoApi {
    private id;
    private playerData;
    private constructor();
    private static construct;
    static fromID(id: string): Promise<CdaVideoApi>;
    static fromURL(url: string): Promise<CdaVideoApi>;
    /**
     * Gets video ID from URL
     * @param url URL of video
     * @returns ID of video
     */
    static URLtoID(url: string): string;
    /**
     *
     * @returns Qualities of video (value of map is needed to get video url)
     */
    getQualities(): Map<string, string>;
    /**
     * Gets video ID
     * @returns Video ID
     */
    getVideoID(): string;
    /**
     * Gets direct video url
     * @param quality Quality of video (get from getQualities())
     * @returns Direct (downloadable) url of video
     */
    getDirectVideoLink(quality: string): Promise<string>;
    /**
     * ⚠⚠⚠ DOES NOT WORK! ⚠⚠⚠
     * you can use this as placeholder for now or contribute to fix it
     * @param comment Comment to be added
     */
    addComment(comment: string): Promise<void>;
    /**
     * Gets video data including comments
     * @param commentSorting Sorting of comments
     * @returns Video Data
     */
    getVideoData(commentSorting?: "popular" | "newest"): Promise<VideoData>;
}
